function config(e){e.when("/",{templateUrl:"app/landing/landing.htm",controller:"landingController",controllerAs:"vm",resolve:{loadData:loadData}}).when("/marketReceipt",{templateUrl:"app/marketReceipt/marketReceipt.htm",controller:"marketReceiptController",controllerAs:"vm",reloadOnSearch:!0,resolve:{formData:["backendSrvc",function(e){return e.getFormData("marketReceipt")}],marketPossibilities:["backendSrvc",function(e){return e.getPossibleMarkets()}],suggestions:["backendSrvc","$routeParams",function(e,t){return e.getSuggestionData(t)}],searchParams:["$routeParams",function(e){return e}]}}).when("/success",{templateUrl:"app/success/success.htm",controller:"successController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}function loadData(e){e.loadAllForms()}function backendSrvc(e,t){function n(e,n){return new Promise(function(a,o){t({method:"GET",url:e+n}).then(function(e){a(e.data)},function(e){console.log("Error:",e)})})}function a(n){return e.info("got this in _post",n),new Promise(function(e,a){var o=t.post("forms/marketReciept",n).then(function(t){e("success")},function(t){e("error")});console.log(o)})}function o(e){var t=this;t.allForms={marketReceipt:"marketReceipt.json"};var n=t.allForms[e];return new Promise(function(a,o){"undefined"!=typeof t[e]?a(t[e]):t._get("assets/",n).then(function(n){t[e]=n,a(t[e])})})}function s(){var e=this;return new Promise(function(t,n){e._get("","marketReceiptsDue").then(function(e){t(e)})["catch"](function(e){n(e)})})}function r(){var e=this;e.allForms={marketReceipt:"marketReceipt.json"},console.log(e.allForms),Object.keys(e.allForms).forEach(function(t){var n=e.allForms[t];e._get("assets/",n).then(function(n){e[t]=n.data})})}function i(e){return console.log("got these",e),{Market:"Surf City",Name:"Ahmed",Gross:415,Fee:42,Pay:83,Reciepts:10,Bank:60,Due:220}}function c(t){var n=this;return e.info("got this",t),new Promise(function(e,a){n._post(t).then(function(t){e(t)})["catch"](function(e){a(e)})})}var l={_get:n,_post:a,getFormData:o,getPossibleMarkets:s,loadAllForms:r,getSuggestionData:i,submitFormData:c};return l}function landingController(e,t){var n=this;n.redirectTo=function(n){e.info("clicked",n),t.path("/"+n)}}function marketReceiptController(e,t,n,a,o,s){var r=this;r.data=n,r.possibleMarkets=a,r.suggestions=o,e.info("searchParams",s,Object.keys(s).length),e.info("suggestions",o),0==Object.keys(s).length?r.showForm=!1:r.showForm=!0}function selectPrefilledForm(){function e(e,t,n,a){}function t(e,t,n){function a(e){return{path:"/marketReceipt",params:{date:"20160627",start:"1700",zip:"00000",loc:"01"}}}var o=this;o.selectOption=function(e){var t=o.data[e],s=a(t);console.log(s),n.path(s.path).search(s.params)}}e.$inject=["scope","el","attr","ctrl"];var n={restrict:"AECM",templateUrl:"app/selectForm/selectForm.directive.htm",replace:!0,scope:{data:"="},link:e,controller:t,controllerAs:"vm",bindToController:!0};return t.$inject=["$scope","$log","$location"],n}function navbar(){function e(e,t,n,a){}function t(e,t){}e.$inject=["scope","el","attr","ctrl"];var n={restrict:"AECM",templateUrl:"app/navbar/navbar.directive.htm",replace:!0,scope:{},link:e,controller:t,controllerAs:"vm",bindToController:!0};return t.$inject=["$scope","$log"],n}function successController(e){e.info("success controller")}function recieptForm(){function e(e,t,n,a){}function t(e,t,n,a){function o(){c.submitBtnClasses["btn-danger"]=!1,c.submitBtnClasses["btn-success"]=!0}function s(){c.submitBtnClasses["btn-danger"]=!0,c.submitBtnClasses["btn-success"]=!1}function r(){var e=0;return Object.keys(c.data.questions).forEach(function(t){var n=c.data.questions[t].approvals.addressed;n&&e++}),e==l?o():s(),e}function i(){var e=document.getElementById("recieptImage"),t=document.getElementById("Photo").files[0],n=new FileReader,a=null;n.addEventListener("load",function(){a=n.result,e.src=a},!1),t&&(n.readAsDataURL(t),c.inputs.Photo={src:"Market_Reciept.jpg",binary:a})}var c=this,l=0,u={};c.currentDate=new Date,c.inputs={},c.approvals={},c.submitBtnClasses={btn:!0,"btn-danger":!0,"btn-success":!1,"col-xs-12":!0,"col-sm-12":!0,"col-md-12":!0,"col-lg-12":!0},Object.keys(c.data.questions).forEach(function(e){var t=c.data.questions[e].name;u[t]=l,l++}),c.inputs=c.suggestions,c.refreshApprovals=function(){Object.keys(c.data.questions).forEach(function(e){var t=c.data.questions[e].name;c.inputs[t].value="",c.data.questions[e].approvals.addressed=!1,c.data.questions[e].approvals.value=null,c.data.questions[e].approvals.text="OK?",c.data.questions[e].classes.approvalDiv["round-button-circle-free"]=!0,c.data.questions[e].classes.approvalDiv["round-button-circle-approved"]=!1,c.data.questions[e].classes.approvalDiv["round-button-circle-revised"]=!1,c.data.questions[e].classes.inputDiv["has-success"]=!1,c.data.questions[e].classes.inputDiv["has-warning"]=!1,c.data.questions[e].classes.inputDiv["has-danger"]=!1}),r()},c.changed=function(e){var t=u[e];c.data.questions[t].approvals.addressed=!0,c.data.questions[t].approvals.value=!0,c.data.questions[t].approvals.text="NO!",c.data.questions[t].classes.approvalDiv["round-button-circle-free"]=!1,c.data.questions[t].classes.approvalDiv["round-button-circle-revised"]=!0,c.data.questions[t].classes.inputDiv["has-danger"]=!0,r()},c.approveField=function(e){var t=u[e],n=c.data.questions[t].approvals.addressed;n||(c.inputs[e].value=c.inputs[e].suggestion,c.data.questions[t].approvals.addressed=!0,c.data.questions[t].approvals.value=!0,c.data.questions[t].approvals.text="YES!",c.data.questions[t].classes.approvalDiv["round-button-circle-free"]=!1,c.data.questions[t].classes.approvalDiv["round-button-circle-approved"]=!0,c.data.questions[t].classes.inputDiv["has-success"]=!0,r())},e.photoAdded=function(){var n=u.Photo;i(),t.info(c.inputs.Photo),c.data.questions[n].approvals.addressed=!0,c.data.questions[n].approvals.value=!0,c.data.questions[n].classes.inputDiv["has-success"]=!0,r(),e.$apply()},c.submitForm=function(){if(r()==l){var o={};Object.keys(c.inputs).forEach(function(e){"Photo"!==e?"number"==typeof c.inputs[e].value?o[e]=100*c.inputs[e].value:o[e]=c.inputs[e].value:o[e]=c.inputs[e]}),a.submitFormData(o).then(function(a){t.info("submitted!",a),n.path("/success"),e.$apply()})["catch"](function(e){t.info("Error:",e)})}else console.log("need to finish the fields")},c.refreshApprovals()}e.$inject=["scope","el","attr","ctrl"];var n={restrict:"AECM",templateUrl:"app/form/form.directive.htm",replace:!0,scope:{data:"=",suggestions:"="},link:e,controller:t,controllerAs:"vm",bindToController:!0};return t.$inject=["$scope","$log","$location","backendSrvc"],n}config.$inject=["$routeProvider"],loadData.$inject=["backendSrvc"],angular.module("marketReceipt",["ngRoute"]),angular.module("marketReceipt").config(config),angular.module("marketReceipt").factory("backendSrvc",backendSrvc),backendSrvc.$inject=["$log","$http"],angular.module("marketReceipt").controller("landingController",landingController),landingController.$inject=["$log","$location"],angular.module("marketReceipt").controller("marketReceiptController",marketReceiptController),marketReceiptController.$inject=["$log","backendSrvc","formData","marketPossibilities","suggestions","searchParams"],angular.module("marketReceipt").directive("selectPrefilledForm",selectPrefilledForm),angular.module("marketReceipt").directive("navbar",navbar),angular.module("marketReceipt").controller("successController",successController),successController.$inject=["$log"],angular.module("marketReceipt").directive("recieptForm",recieptForm);
//# sourceMappingURL=data:application/json;base64,
