function recieptForm(){function e(e,t,l,a){}function t(e,t){var l=this;l.currentDate=new Date,console.log("in the form",this.data)}e.$inject=["scope","el","attr","ctrl"];var l={restrict:"AECM",templateUrl:"app/form/form.directive.htm",replace:!0,scope:{data:"="},link:e,controller:t,controllerAs:"vm",bindToController:!0};return t.$inject=["$scope","$log"],l}function mainController(e){var t=this;e.info("we're in the controller"),console.log("testing");var l={"col-xs-5":!0,"col-sm-5":!0,"col-md-5":!0,"col-lg-5":!0},a={"col-xs-7":!0,"col-sm-7":!0,"col-md-7":!0,"col-lg-7":!0};t.data={title:"Market Reciept",anotherTest:8375,questions:[{name:"Market Name",inputClasses:a,titleClasses:l},{name:"Employee",inputClasses:a,titleClasses:l},{name:"Gross Sales",inputClasses:a,titleClasses:l},{name:"Market Fee",inputClasses:a,titleClasses:l},{name:"Employee Pay",inputClasses:a,titleClasses:l},{name:"Employee's Expenses",inputClasses:a,titleClasses:l},{name:"Starting Bank",inputClasses:a,titleClasses:l},{name:"Due To Ah-Nuts",inputClasses:a,titleClasses:l}]}}function navbar(){function e(e,t,l,a){}function t(e,t){}e.$inject=["scope","el","attr","ctrl"];var l={restrict:"AECM",templateUrl:"app/navbar/navbar.directive.htm",replace:!0,scope:{},link:e,controller:t,controllerAs:"vm",bindToController:!0};return t.$inject=["$scope","$log"],l}angular.module("marketReciept",[]),angular.module("marketReciept").directive("recieptForm",recieptForm),angular.module("marketReciept").controller("mainController",mainController),mainController.$inject=["$log"],angular.module("marketReciept").directive("navbar",navbar);
//# sourceMappingURL=data:application/json;base64,
